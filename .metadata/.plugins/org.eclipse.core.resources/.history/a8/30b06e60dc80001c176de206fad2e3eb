package com.Subhajit.Vertex_web;

import java.util.HashMap;
import java.util.Optional;
import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import io.netty.handler.codec.http.HttpResponseStatus;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.web.Router;

public class WatchListRestApi {
	private static final Logger LOG = LoggerFactory.getLogger(WatchListRestApi.class);

	public static void attach(Router parent) {
		final HashMap<UUID, WatchList> watchListPerAccount = new HashMap<>();
		String path = "/account/watchlist/:accountId";
		parent.get(path).handler(context -> {
			var accountId = context.pathParam("accountId");
			LOG.debug("{} for account {}", context.normalizedPath(), accountId);
			var watchList=Optional.ofNullable(watchListPerAccount.get(UUID.fromString(accountId)));
			if(watchList.isEmpty()) {
				context.response().setStatusCode(HttpResponseStatus.NOT_FOUND.code())
				.end(new JsonObject()
				.put("message", "watchlist for account "+accountId+" not available! ")
				.put("path", context.normalizedPath())
				.toBuffer());
				return;
			}
			context.response().end(watchList.get().toJsonObject().toBuffer());
		});

		parent.put(path).handler(context -> {
			var accountId = context.pathParam("accountId");
			LOG.debug("{} for account {}", context.normalizedPath(), accountId);

		});

		parent.delete(path).handler(context -> {

		});

	}

}
